name: WeRead to Notion Sync

on:
  schedule:
    - cron: '0 23 * * *'  # 每天 07:00 CST/China (UTC+8 -> 23:00 UTC 前一日)
  workflow_dispatch:
    inputs:
      book_id:
        description: '仅同步指定书籍（可选）'
        type: string
        required: false

jobs:
  run-sync:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    concurrency:
      group: weread-notion-sync
      cancel-in-progress: false
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "UV_CACHE_DIR=$HOME/.cache/uv" >> $GITHUB_ENV
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          uv sync

      - name: Validate config
        env:
          WEREAD_COOKIE: ${{ secrets.WEREAD_COOKIE }}
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
          NOTION_PARENT_PAGE_ID: ${{ secrets.NOTION_PARENT_PAGE_ID }}
        run: |
          uv run python src/main.py check-config

      - name: Run sync
        if: ${{ success() }}
        env:
          WEREAD_COOKIE: ${{ secrets.WEREAD_COOKIE }}
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
          NOTION_PARENT_PAGE_ID: ${{ secrets.NOTION_PARENT_PAGE_ID }}
        run: |
          if [ -n "${{ inputs.book_id }}" ]; then
            echo "同步指定书籍: ${{ inputs.book_id }}" | tee sync.log
            uv run python src/main.py sync "${{ inputs.book_id }}" | tee -a sync.log
          else
            uv run python src/main.py sync | tee sync.log
          fi

      - name: Upload log artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sync-log
          path: sync.log
          retention-days: 7

      - name: Create issue on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const title = 'WeRead → Notion 定时同步失败';
            const body = `自动任务失败。\n\n- Workflow: ${{ github.workflow }}\n- Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\n\n请前往 Actions 查看失败日志。`;
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'automations'
            });
            const existing = issues.find(i => i.title === title);
            if (existing) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: existing.number,
                body
              });
            } else {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title,
                body,
                labels: ['automations']
              });
            }


